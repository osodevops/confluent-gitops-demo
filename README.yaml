---
#
# This is the canonical configuration for the `README.md`
# Run `make readme` to rebuild the `README.md`
#

# Name of this project
name: "Confluent GitOps Demo"

# Short description of this project
description: |-
  Fully automated Confluent Platform Demo which deploys Kafka in multiple namespaces and uses the TF Controller with Confluent Terraform Provider to provision Confluent Cloud resources.

# Canonical GitHub repo
github_repo: osodevops/confluent-gitops-demo

# How to use this project
usage: |-
  
  The Toolkit components consist of Source Controller, Kustomize Controller, Helm Controller, Notification Controller and the Image Automation Controllers.
  ```
  ├── flux-system
  │   ├── gotk-components.yaml
  │   ├── gotk-sync.yaml
  │   └── kustomization.yaml
  ├── kustomize
  │   ├── base
  │   │   ├── confluent
  │   │   │   ├── connect
  │   │   │   ├── control-centre
  │   │   │   ├── kafka.yaml
  │   │   │   ├── ksqldb
  │   │   │   ├── kustomization.yaml
  │   │   │   ├── schmea-registry
  │   │   │   ├── secrets
  │   │   │   └── zookeeper.yaml
  │   │   └── kustomization.yaml
  │   ├── environments
  │   │   ├── kustomization.yaml
  │   │   ├── production
  │   │   └── sandbox
  │   ├── operator
  │   ├── terraform
  │   └── tf-controller
  ```

# Example usage
examples: |-
  ### Deployment Process
  #### 1. Create your Kubernetes cluster
  We will be using MiniKube, but any remote cluster will work. Create the cluster using: 
  * Run `minikube start --cpus=6 --memory=20019 --kubernetes-version=v1.21.0`
  
  #### 2. Deploy the GitOps toolkit
  Toolkit CRDs and components are deployed using: 
  * Navigate to `./flux-system`
  * Run `kubectl apply -f gotk-components.yaml`

  #### 3. Deploy Flux Sync
  * Navigate to `./flux-system`
  * run `kubectl apply -f gotk-sync.yaml`
  This next step will tell Flux what repository to monitor, and, within that repository, what kustomization files to start with. The first Kustomize resource that Flux will look for to is located at `./kustomize/operator`.  This will install the confluent-for-kubernetes Helm chart which will monitor all namespaces for Confluent CRDs.   
  After a successful health check of the operator (which will run as a pod), Flux will then proceed to deploy the following Kustomizations:
    * Production environment located at  `./kustomize/environments/production`
    * Sandbox environment located at  `./kustomize/environments/sandbox`
    * TF Controller for reconciling Terraform resources in the GitOps way located at `./kustomize/environments/tf-controller`
    * Auto Apply Terraform using the variables located at `./kustomize/environments/terraform`
  You should see the following output:
    ```console
    gitrepository.source.toolkit.fluxcd.io/flux-system created
    kustomization.kustomize.toolkit.fluxcd.io/confluent-infra created
    kustomization.kustomize.toolkit.fluxcd.io/production created
    kustomization.kustomize.toolkit.fluxcd.io/sandbox created
    kustomization.kustomize.toolkit.fluxcd.io/terraform-controller created
    kustomization.kustomize.toolkit.fluxcd.io/confluent-cloud created
    ```
  
  #### 4. Let Flux work its magic
  Now that we have flux monitoring the forked Git repository, let's demonstrate the GitOps behaviour!  If everything has deployed successfully, you should see a healthy confluent stack looking like this:
    ```console
  │ NAMESPACE           NAME                                                  PF         READY                   RESTARTS STATUS             IP                     NODE               AGE             │
  │ confluent           confluent-operator-global-5fb8c9d5f8-82tqm            ●          1/1                            0 Running           172.17.0.11            minikube           6m39s            │
  │ flux-system         helm-controller-544df4db67-5ghcd                      ●          1/1                            0 Running           172.17.0.6             minikube           7m43s            │
  │ flux-system         image-automation-controller-675bff6646-m8s5x          ●          1/1                            0 Running           172.17.0.4             minikube           7m43s            │
  │ flux-system         image-reflector-controller-6bcddcfb44-dh4bv           ●          1/1                            0 Running           172.17.0.8             minikube           7m43s            │
  │ flux-system         kustomize-controller-5b5bb9d49b-mh76j                 ●          1/1                            0 Running           172.17.0.5             minikube           7m43s            │
  │ flux-system         notification-controller-b55cbcf9c-jb8rh               ●          1/1                            0 Running           172.17.0.7             minikube           7m43s            │
  │ flux-system         source-controller-6b6c7bc4bb-n29zd                    ●          1/1                            0 Running           172.17.0.9             minikube           7m43s            │
  │ flux-system         tf-controller-f65f5f4f5-vnrbl                         ●          1/1                            0 Running           172.17.0.10            minikube           6m42s            │
  │ production          connect-0                                             ●          0/1                            0 Running           172.17.0.17            minikube           5m48s            │
  │ production          controlcenter-0                                       ●          0/1                            0 Running           172.17.0.13            minikube           5m49s            │
  │ production          kafka-0                                               ●          0/1                            0 Running           172.17.0.15            minikube           5m47s            │
  │ production          kafka-1                                               ●          0/1                            0 Running           172.17.0.22            minikube           5m47s            │
  │ production          kafka-2                                               ●          0/1                            0 Running           172.17.0.21            minikube           5m47s            │
  │ production          schemaregistry-0                                      ●          0/1                            0 Running           172.17.0.16            minikube           5m48s            │
  │ production          zookeeper-0                                           ●          0/1                            0 Running           172.17.0.20            minikube           5m47s            │
  │ production          zookeeper-1                                           ●          0/1                            0 Running           172.17.0.19            minikube           5m47s            │
  │ production          zookeeper-2                                           ●          0/1                            0 Running           172.17.0.18            minikube           5m47s            │
  │ sandbox             kafka-0                                               ●          0/1                            0 Running           172.17.0.12            minikube           5m49s            │
  │ sandbox             zookeeper-0                                           ●          0/1                            0 Running           172.17.0.14            minikube           5m48s            │
    ```

related:
  - name: "Terraform GitOps Example"
    description: "A Terraform GitOps workflow showcasing how to use the TF-Controller to run your Terraform via GitOps"
    url: "https://github.com/osodevops/terraform-gitops-example"
  - name: "Kafka GitOps Example"
    description: "A Kafka / Confluent GitOps workflow example for multi-env deployments with Flux, Kustomize, Helm and Confluent Operator"
    url: "https://github.com/osodevops/kafka-gitops-examples"
  - name: "Confluent Platform on Azure"
    description: "Terraform Module for deploying best practice HA Confluent Platform on Azure"
    url: "https://github.com/osodevops/terraform-azure-confluent-platform"
